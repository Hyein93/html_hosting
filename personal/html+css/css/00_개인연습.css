@charset "utf-8";

section {
  box-sizing: border-box;
  /* min-height 요소의 최소 세로 크기를 설정
    박스 요소는 width와 height로 크기를 설정할 수 있으며,
    margin(바깥쪽 여백), padding(안쪽 여백), border(테두리)를 설정할 수 있습니다. 
    width 속성은 크키를 설정하지만,
    컨텐츠의 크기는 max-content, min-content, fit-content 속성을 통해 설정이 가능합니다.
    */
  max-width: 1000px;
  padding: 30px;
  margin: auto;
}

header {
  padding: 30px;
}

p {
  margin: 20px 0;
  font-size: 14px;
}

h1,
h2,
h3 {
  margin: 0;
  font-family: "Noto Sans KR", sans-serif;
  /* 폰트 스타일*/
  font-weight: bold;
  /*폰트 굵기*/
}

h1 {
  color: #000;
  font-size: 50px;
  line-height: 80px;
}

h2 {
  color: #000;
  font-size: 30px;
  line-height: 50px;
}

h3 {
  color: #000;
  font-size: 20px;
  line-height: 15px;
}

/* position
  - position 속성은 문서 상에 요소를 배치하는 방법을 지정.
  - top, right, bottom, left 속성이 요소를 배치할 최종 위치를 결정. */
/*  
  - relative: 원래 위치를 기준으로 상대적으로 배치 (기존 위치에서 벗어나게 배치 가능)
    요소의 위치 지정은 top, bottom, left, right속성을 이용하여 지정
    어디까지나 해당 방향을 기준으로 요소를 이동시킨다는 점을 명심할것

  - absolute: 배치 기준을 자신의 상위 요소 위에 둠
    요소의 위치 지정은 top, bottom, left, right속성을 이용하여 지정
    absolute 속성값이 부여된 요소는 기존 html 웹문서에 나오는 요소와 상호작용하지 않고 독립적으로 존재한다.

  - fixed: 배치 기준이 특정 요소가 아닌 브라우저 전체 화면이 된다.
    화면상 특정 위치를 기준으로 설정되기 때문에 스크롤이 일어나더라도 요소가 고정되어 화면에 나타남.
    -> 팝업창, 채팅, 메뉴 등
    요소의 위치 지정은 top, bottom, left, right속성을 이용하여 지정

  - sticky: 브라우저 화면을 스크롤 했을 때 효과가 나타남
    기준점 이상을 넘지 않을 때는 relative처럼 동작하다가 그 이상을 넘게 되면
    fixed로 해당 위치에 고정되게 된다.
 */
/* margin: 0 auto; 컨텐츠 가로 중앙 배치, margin 값은 총4개까지 작성 가능 */
.home-card {
  position: relative;
  padding-left: 110px;
  min-height: 100px;
  margin: 50px 0;
}

.home-img {
  position: absolute;
  left: 0;
  top: 0;
  width: 100px;
  height: 100px;
  /* background: 이미지에 대한 프레임 개념이라고 이해함, 설정 빼니까 이미지 안보이던대... */
  background-position: center;
  background-repeat: no-repeat;
  /* background-size
    - auto: 원래 배경 이미지 크기만큼 표시(기본 값)
    - contain: 지정한 요소 안에 배경 이미지가 다 들어오도록 이미지를 확대/축소
    - cover: 지정한 요소를 다 덮도록 배경이미지를 확대/축소
    - 크기 값: 너비 값과 높이 값을 지정
    - 백분율: 지정한 요소를 기준으로 백분율 값을 지정 */
  background-size: contain;
  /* CSS border-radius 속성은 요소 테두리 경계의 꼭짓점을 둥글게 만듬 */
  border-radius: 10px;
}

.home-time {
  font-size: 15px;
  font-weight: normal;
}

/* 움직이는 글자를 파헤쳐... */
/* overflow: hidden; 속성은 부모 요소의 내부에서 발생하는 콘텐츠의 오버플로우(overflow)를 숨기는 속성입니다. 이를 사용하면 부모 요소의 크기가 고정되며,
  자식 요소가 부모 요소의 크기를 벗어나더라도 숨겨진 상태로 존재하게 된다.

  따라서, overflow: hidden; 속성을 부모 요소에 적용하면, 자식 요소가 부모 요소의 크기를 벗어날 경우 해당 부분을 숨길 수 있다. 이렇게 함으로써 자식 요소가 부모 요소의 흐름을 벗어나지 않고, 부모 요소 내부에 포함되도록 할 수 있다.

  이러한 동작 방식 때문에 overflow: hidden; 속성은 부모 요소가 자식 요소의 크기를 포함하도록 강제하는 효과가 있다. 따라서, 부모 요소의 크기가 자식 요소의 크기에 의해 자동으로 조정되며, 부모 요소가 자식 요소를 포함하는 것이 가능해진다.
  position:relative: 부모 태그 기준으로 위치 지정
  animation:marquee - 흐르는 옵션! 
  10s linear - 속도 
  infinite - 무한 반복
 */
.marquee {
  height: 100px;
  width: 100%;
  overflow: hidden;
  position: relative
}

/* 움직임 옵션 */
.marquee div {
  display: block;
  width: 200%;
  height: 128px;
  position: absolute;
  overflow: hidden;
  animation: marquee 15s linear infinite
}

/* 텍스트 옵션 */
.marquee span {
  float: left;
  width: 50%;
  font-size: 50px;
  font-weight: bold;
  display: flex;
  /* 그라데이션 글자 표현 */
  background: #afafaf;
  /* 그라데이션 진행 안될시 보일 색상 */
  background: linear-gradient(to right, #c1eec1, #cfb5ff);
  background-clip: text;
  /* border-box, padding-box, content-box, text 4가지
  border-box
  외곽선의 비어 있는 부분까지 배경을 칠한다. (기본값)
  padding-box
  외곽선 부분은 칠하지 않지만 안쪽 여백까지는 배경을 칠한다.
  content-box
  안쪽 여백 부분도 칠하지 않고 오로지 내용이 들어갈 부분만 배경을 칠한다.
  text
  텍스트를 따라서 배경을 칠한다.
   */
  color: transparent;
  white-space: nowrap
}

@keyframes marquee {
  0% {
    left: 0
  }

  100% {
    left: -100%
  }
}

/* 메인 텍스트 위치*/
.main_marquee_txt {
  width: 100%;
  height: 80px;
  position: relative;
  overflow: hidden;
}

.bg {
  height: 300px;
  background: url(../img/bg.jpg) no-repeat 20% 50%/cover fixed;
}

.bg p {
  color: #fff;
}